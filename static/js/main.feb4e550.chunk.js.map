{"version":3,"sources":["Header.js","Chat.js","Chats.js","Profile.js","ChatScreen.js","LoginNReg.js","Home.js","ErrorBoundry.js","App.js","serviceWorker.js","index.js"],"names":["Header","backButton","history","useHistory","className","id","IconButton","onClick","replace","fontSize","to","localStorage","getItem","Avatar","src","alt","Chat","name","photo","msg","IsReceiver","substring","style","marginRight","paddingRight","fontWeight","color","Chats","useState","isloaded","setload","chatList","setchatList","useEffect","axios","get","headers","then","response","data","catch","e","console","log","List","length","map","chat","Receiver","ListItem","key","Sender","button","component","Link","Photo","Msg","textAlign","margin","marginTop","Profile","isUploadStart","setStart","setErrorOnChange","errMsg","setErrMsg","isLoggedOut","setLoggedOut","classNames","width","type","accept","onChange","removeItem","formData","FormData","append","target","files","post","setItem","error","message","alert","backgroundColor","border","value","window","confirm","location","href","ChatScreen","targetUserId","sendingMsg","setSendingMsg","firstTime","setFirstTime","btnRef","useRef","setValue","messagesEndRef","setMsg","receiverData","setReceiverData","connection","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","start","on","toLowerCase","preval","scrollToBottom","params","MessageList","ReceiverData","err","current","scrollIntoView","behavior","block","ref","m","zIndex","method","onSubmit","txtmsg","document","forms","invoke","disabled","preventDefault","trim","overflow","resize","rows","placeholder","LoginNReg","loggedin","setloggedin","isLoginStart","seterrMsg","email","setEmail","marginLeft","display","justifyContent","event","x","test","UserId","TextField","helperText","inputProps","paddingLeft","label","Button","variant","classes","Home","userList","setUserList","u","ErrorBoundry","props","state","hasError","this","children","Component","App","exact","strict","path","render","match","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.feb4e550.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport ChatBubbleSharpIcon from '@material-ui/icons/ChatBubbleSharp';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction Header({backButton}) {\r\n    const history=useHistory();\r\n\r\n\r\n   \r\n    return (\r\n\r\n           <div className=\"header\" id=\"header\">\r\n            \r\n       {\r\n           \r\n           backButton?\r\n           \r\n                   \r\n          <IconButton  onClick={()=>history.replace(backButton)}>\r\n              <ArrowBackIosIcon className=\"header__button\"  fontSize=\"large\" ></ArrowBackIosIcon>\r\n          </IconButton>\r\n\r\n           :(<Link to=\"/Profile/\">\r\n             \r\n           <IconButton>\r\n              {\r\n              localStorage.getItem(\"Photo\")!==null?(<Avatar src={`https://chatee.somee.com/Image/${localStorage.getItem(\"Photo\")}`}/>):<Avatar/>\r\n\r\n\r\n              }\r\n              \r\n               {/* <PersonIcon className=\"header__button\" fontSize=\"large\" /> */}\r\n           </IconButton> \r\n           </Link>)\r\n          \r\n       }\r\n    \r\n      \r\n      <Link to=\"/\">\r\n      <img className=\"header__logo\" src=\"https://cdn.dribbble.com/users/27903/screenshots/6035052/chatty_2x.png\" alt=\"tinder-logo\"/>\r\n      </Link>\r\n   \r\n      <Link to=\"/Chats/\">\r\n          <IconButton className=\"iconbtn\">\r\n          <ChatBubbleSharpIcon  className=\"header__button\" fontSize=\"large\" />\r\n       \r\n          </IconButton>\r\n          </Link>\r\n     \r\n    \r\n       \r\n       \r\n   </div>\r\n\r\n\r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './Chat.css';\r\nfunction Chat({ name, photo, msg,IsReceiver }) {\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            {photo!==\"null\"?<Avatar src={`https://chatee.somee.com/Image/${photo}`} className=\"chat_dp\" />:<Avatar  className=\"chat_dp\" />}\r\n            \r\n            <div className=\"chat__details\">\r\n                <h5 id=\"name\">{name}</h5>\r\n                <p id=\"msg\">{msg.substring(0,20) +' . . . '}</p>\r\n             \r\n            </div>\r\n            {IsReceiver?(<p style={{marginRight:'auto',paddingRight:'10px',fontWeight:'bold',color:'#f50057'}} id=\"undread\">New</p>):null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Chats.css';\r\nimport Chat from './Chat';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport { Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nfunction Chats() {\r\n   \r\n    const [isloaded,setload]=useState(false);\r\n    const [chatList, setchatList] = useState([]);\r\n    useEffect(() => {\r\n       \r\n        axios.get(`https://chatee.somee.com/api/chat/Chats?UserId=${localStorage.getItem(\"UserId\")}`, {\r\n            headers: {\r\n\r\n                'Accept': 'application/json'\r\n\r\n            },\r\n\r\n        }).then(response => {\r\n          setload(true);\r\n            setchatList(response.data)\r\n\r\n        }).catch(e => console.log(e));\r\n    }, [setchatList]);\r\n    return (\r\n        <>\r\n        {isloaded?(  <div className=\"chats\">\r\n          \r\n          <List>\r\n          {chatList.length>0 ? (\r\n               \r\n              chatList.map(chat => {\r\n                  if(chat.Receiver===localStorage.getItem(\"UserId\")){\r\n                      return(\r\n                          <ListItem key={chat.Sender} className=\"chats__ListItem\" button component={Link} to={`/Chat/${chat.Sender}/`}>\r\n                          {\r\n                         <Chat  IsReceiver={true} photo={chat.Photo} name={chat.Sender} msg={chat.Msg}/>\r\n                          }\r\n                          \r\n                       </ListItem>\r\n                      )\r\n                  }\r\n\r\n                  return (\r\n\r\n                     \r\n                          <ListItem key={chat.Receiver} className=\"chats__ListItem\" button component={Link} to={`/Chat/${chat.Receiver}/`}>\r\n                             {\r\n                             <Chat  photo={chat.Photo} name={chat.Receiver} msg={chat.Msg}/>\r\n                             }\r\n                             \r\n                          </ListItem>\r\n                    \r\n                  );\r\n              })\r\n              \r\n\r\n          ) : <h3 style={{color:\"lightgrey\",textAlign:'center',margin:'auto',marginTop:'200px'}}>Start new conversation</h3>}\r\n          \r\n    </List>\r\n  \r\n  </div>):<h3 style={{color:\"lightgrey\",textAlign:'center',margin:'auto',marginTop:'200px'}}>Loading...</h3>}\r\n        </>\r\n      \r\n    )\r\n}\r\n\r\nexport default Chats\r\n","import React, { useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Profile.css';\r\nimport classNames from 'classnames'\r\nimport './resonsive.css';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction Profile() {\r\n\r\n    const history=useHistory();\r\n   const [isUploadStart,setStart]=useState(false);\r\n    const [isErrorOnChange,setErrorOnChange]=useState(\"\");\r\n    const [errMsg,setErrMsg]=useState(\"\");\r\n    const [isLoggedOut,setLoggedOut]=useState(false);\r\n    \r\n useEffect(()=>{\r\n\r\n },[isLoggedOut]);\r\n   \r\n    const imgHandler = (e) => {\r\n        setStart(true);  \r\n  \r\n        localStorage.removeItem(\"Photo\");\r\n       \r\n       var formData=new FormData();\r\n       formData.append(\"Photo\",e.target.files[0]);\r\n       formData.append(\"UserId\",localStorage.getItem(\"UserId\"));\r\n   \r\n       axios.post(`https://chatee.somee.com/api/Chat/PhotoUpload`,formData,\r\n       {\r\n           headers:{\r\n               'Content-Type':'multipart/form-data',\r\n            \r\n               \r\n           }\r\n       }).then( response=>{\r\n    \r\n        localStorage.setItem(\"Photo\",response.data);\r\n           \r\n      \r\n          setStart(false);\r\n        \r\n    \r\n        }).catch(error => {\r\n            setStart(false);\r\n            \r\n           localStorage.removeItem(\"Photo\");\r\n            if(error.message===\"Request failed with status code 500\")\r\n            {\r\n                 alert('This image is currupted ! Try anothe one');\r\n                 localStorage.setItem(\"Photo\",null);\r\n           \r\n            }\r\n            else{\r\n                setErrMsg(error.message);\r\n            }\r\n            \r\n            setErrorOnChange(error.message);\r\n           console.log(error);\r\n       });\r\n  \r\n      \r\n   \r\n    }\r\n\r\n    \r\n    const logoutHandler = (e) => {\r\n\r\n        const ans=window.confirm('Are you sure?')\r\n        if(ans)\r\n        {\r\n            localStorage.removeItem(\"UserId\");\r\n            localStorage.removeItem(\"Photo\");\r\n            history.replace(\"/Login\")\r\n           \r\n            setLoggedOut(true);\r\n            window.location.href=\"https://kamleshdewangan.github.io/Chatty\";\r\n        }\r\n     \r\n     \r\n    }\r\n   \r\n    return (\r\n        <>\r\n        \r\n        {\r\n            !isLoggedOut?(<div id=\"profilecontainer\" className={classNames(\"card\", 'container')} style={{ width: '20rem' }}>\r\n         {isUploadStart?(<img className=\"card-img-top\" alt=\"Loading...\" src=\"https://i.pinimg.com/originals/ec/d6/bc/ecd6bc09da634e4e2efa16b571618a22.gif\"/>):(\r\n             \r\n            \r\n\r\n             localStorage.getItem(\"Photo\")!==\"null\"  ?(<img id=\"dp\" src={`https://chatee.somee.com/Image/${localStorage.getItem(\"Photo\")}`} className=\"card-img-top\" alt={localStorage.getItem(\"Photo\")} />): <img id=\"dp\" src={\"https://previews.123rf.com/images/tanyastock/tanyastock1803/tanyastock180300242/97334667-user-icon-human-person-symbol-avatar-login-sign-circle-button-with-soft-color-gradient-background-ve.jpg\"} className=\"card-img-top\" alt=\"img__eroor\" />)}\r\n       \r\n\r\n        <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{localStorage.getItem(\"UserId\")}</h5>\r\n\r\n            \r\n            <input   type=\"file\" id=\"dp__upload\" accept=\".jpg,.jpeg,.png\" style={{ color: 'transparent'}} onChange={imgHandler} />\r\n            \r\n            <input type=\"button\" style={{backgroundColor:'#f50057',marginTop:'10px',border:'none'}} className={classNames('btn','btn-primary','btn-block')} value=\"Logout\" onClick={logoutHandler} />\r\n\r\n            <label style={{color:'rgba(194, 17, 32, 0.747)',marginTop:'10px'}}>{errMsg}</label>\r\n     \r\n    </div>\r\n   \r\n</div>)\r\n\r\n\r\n:   \r\nnull\r\n\r\n}\r\n</>\r\n        \r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {useEffect,useState,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './ChatScreen.css';\r\nimport {HubConnectionBuilder,LogLevel} from '@microsoft/signalr';\r\n\r\n\r\nfunction ChatScreen({targetUserId}) {\r\n   \r\nconst [sendingMsg,setSendingMsg]=useState(false);\r\nconst[isloaded,setload]=useState(false);   \r\nconst [firstTime,setFirstTime]=useState(false);\r\nconst btnRef=useRef(null);\r\nconst [value,setValue]=useState(\"\");\r\nconst messagesEndRef = useRef(null)\r\nconst [msg,setMsg]=useState([]);\r\nconst [receiverData,setReceiverData]=useState([]);\r\n\r\nconst connection=new HubConnectionBuilder().withUrl(\"https://www.aayan.somee.com/Chat\").configureLogging(LogLevel.Information).build();\r\n      \r\n    useEffect(()=>{\r\n       \r\n       connection.start().then(()=>{\r\n       \r\n        connection.on(\"receiveMessage\", (Sender,Receiver,Msg) => {\r\n            setSendingMsg(false);\r\n                   if((localStorage.getItem(\"UserId\").toLowerCase()===Sender.toLowerCase()) && (targetUserId.toLowerCase()===Receiver.toLowerCase())){\r\n                   \r\n                    setMsg(preval=>[...preval,{\r\n                \r\n                        Sender: Sender,\r\n                        Receiver: Receiver,\r\n                        Msg:Msg\r\n                    }])\r\n                    scrollToBottom();\r\n                }\r\n                   else if(localStorage.getItem(\"UserId\").toLowerCase()===Receiver.toLowerCase() && targetUserId.toLowerCase()===Sender.toLowerCase())\r\n                   {\r\n                    \r\n                    setMsg(preval=>[...preval,{\r\n                \r\n                        Sender: Sender,\r\n                        Receiver: Receiver,\r\n                        Msg:Msg\r\n                    }])\r\n                    scrollToBottom();\r\n                   }\r\n          });\r\n\r\n       })\r\n      \r\n        \r\n       \r\n        axios.get(\"https://chatee.somee.com/api/chat/ChatScreen\",{headers:{\r\n            'Accept':'application/json'\r\n        },params:{\r\n            Sender:localStorage.getItem(\"UserId\"),\r\n            Receiver:targetUserId\r\n        }}).then(response=>{\r\n            setload(true);\r\n            if(response.data.MessageList.length>0)\r\n            {\r\n                setMsg(response.data.MessageList);\r\n                setReceiverData(response.data.ReceiverData);\r\n              \r\n            }else{\r\n                setFirstTime(true);\r\n            }\r\n            \r\n            \r\n            scrollToBottom()\r\n            \r\n        }).catch(err=>console.log(err));\r\n\r\n    },[]);\r\n\r\n    \r\n    const submitHandler=(e)=>{\r\n      setSendingMsg(true);\r\n        var txtmsg=document.forms[\"frm\"][\"txtmsg\"].value;\r\n        axios.post(\"https://chatee.somee.com/api/Chat/PostMessage\",{'Sender':localStorage.getItem(\"UserId\"),'Receiver':targetUserId,'Msg':txtmsg},{\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n\r\n        }).then(response=>{\r\n            \r\n            connection.start().then(()=>{\r\n                \r\n               \r\n                  connection.invoke(\"sendMessage\", localStorage.getItem(\"UserId\"),targetUserId,txtmsg);\r\n             \r\n            }).catch(()=>console.log('not connected to the signalr'));\r\n            \r\n            }\r\n             ).catch(err=>console.log(err));\r\n       \r\n         \r\n        document.forms[\"frm\"][\"txtmsg\"].value=\"\";\r\n        setValue(\"\");\r\n        scrollToBottom();\r\n        btnRef.current.disabled=true;\r\n        e.preventDefault();\r\n        \r\n    }\r\n    \r\n  \r\n    \r\n    const  scrollToBottom = () => {\r\n   \r\n         messagesEndRef.current.scrollIntoView({behavior: \"smooth\", block: \"end\"});\r\n    \r\n      }\r\n\r\n      const onChangeHandler=(e)=>{\r\n       if((e.target.value).trim())\r\n       {\r\n           \r\n        setValue(e.target.value);\r\n       }\r\n   \r\n      \r\n      }\r\n    \r\n       \r\n    return (\r\n      <>\r\n        {isloaded?(\r\n            <> \r\n             <div className=\"chatscreen\" id=\"chatscreen\" ref={messagesEndRef}>\r\n        {\r\n            \r\n\r\n            (msg.length>0)?(\r\n               \r\n                msg.map(m=>{\r\n                  \r\n                    if(m.Sender===localStorage.getItem(\"UserId\"))\r\n                    {\r\n                        return(\r\n                            <div key={m.Sender} className=\"chatscreen__message\" >\r\n                           \r\n                            <p className=\"chatscreen__sendermsg\">{m.Msg}</p>\r\n                         \r\n                            </div>\r\n\r\n                            \r\n                        )\r\n                    }\r\n                    else\r\n                    {\r\n                        return(\r\n                            <div key={m.Receiver} className=\"chatscreen__message\"  >\r\n                            <Avatar style={{zIndex:-1}} src={`https://chatee.somee.com/Image/${receiverData.Photo}`}/>\r\n                               \r\n                            <p className=\"chatscreen__recevivermsg\">\r\n                                {m.Msg}\r\n                            </p>\r\n                            </div>\r\n                        )\r\n                      \r\n\r\n                    }\r\n                   \r\n                    \r\n                    \r\n\r\n                \r\n            })\r\n         \r\n\r\n\r\n            ):(firstTime?<p style={{marginTop:'25vh',textAlign:\"center\",color:'lightgrey'}}>Start the Conversation</p>:<p style={{marginTop:'25vh',textAlign:\"center\",color:'lightgrey'}}>Loading...</p>)\r\n                \r\n           \r\n        }\r\n         \r\n          </div>\r\n    \r\n       \r\n       <form method=\"post\" name=\"frm\" className=\"chatscreen__form\" onSubmit={submitHandler}> \r\n      <textarea name=\"txtmsg\"  onChange={onChangeHandler} style={{overflow:'auto',resize:'none'}} rows=\"1\"  type=\"area\" className=\"chatscreen__input\" placeholder={sendingMsg?'Sending...':`send a message to ${targetUserId.toLowerCase()}`}></textarea>\r\n      \r\n       <button type=\"submit\" id=\"submit\" ref={btnRef} disabled={!value} className=\"chatscreen__button\">Send</button>\r\n       </form>\r\n       </>)\r\n       :<h3 style={{color:\"lightgrey\",textAlign:'center',margin:'auto',marginTop:'200px'}}>Loading...</h3>}\r\n      \r\n       </>\r\n       \r\n    )\r\n}\r\n\r\nexport default ChatScreen\r\n","import React, { useState} from 'react';\r\nimport {useEffect} from 'react';\r\nimport './LoginNReg.css';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction LoginNReg() {\r\n   \r\n    const history=useHistory();\r\n    const[loggedin,setloggedin]=useState(\"\");\r\n    const[isLoginStart,setStart]=useState(false);\r\n    const [errMsg, seterrMsg] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    \r\n    useEffect(()=>{\r\n     \r\n    },[loggedin]);\r\n    const submitHandler = (event) => {\r\n     \r\n        var x = document.forms[\"myForm\"][\"txtEmail\"].value;\r\n        if (x === \"\") {\r\n\r\n            seterrMsg(\"Required\");\r\n\r\n        }\r\n        else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(x)) {\r\n            seterrMsg(\" Enter Valid Email\");\r\n\r\n        }\r\n        else {\r\n            setStart(true);\r\n\r\n            axios.post(\"https://chatee.somee.com/api/Chat/LoginOrRegister\", { 'Email': email }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n\r\n                },\r\n\r\n            }).then(response => {\r\n               \r\n                localStorage.setItem(\"UserId\", response.data.UserId);\r\n                localStorage.setItem(\"Photo\",response.data.Photo);\r\n               \r\n                \r\n                 setloggedin(\"done\");\r\n               \r\n                \r\n            }).catch(e => console.log(e));\r\n\r\n\r\n        }\r\n\r\n\r\n        event.preventDefault();\r\n    }\r\n    const changeHandler = (e) => {\r\n        seterrMsg(\"\");\r\n        setEmail(e.target.value);\r\n        if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(e.target.value)) {\r\n            seterrMsg(\" Enter Valid Email\");\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            {localStorage.getItem(\"UserId\")===null ? (\r\n                <>\r\n                \r\n                {isLoginStart?(\r\n                <div className={classNames(\"card\")} style={{ border:'none',marginTop:'130px', width: '20rem',marginLeft:'auto',marginRight:'auto' }}>\r\n                   <div className=\"card-body\">\r\n                       <img className=\"card-img-top\" alt=\"Loading...\" src=\"https://wpamelia.com/wp-content/uploads/2018/11/ezgif-2-6d0b072c3d3f.gif\"/>\r\n                   </div>\r\n                   </div>):(\r\n              \r\n              <> <div className=\"login__logoContainer\" style={{display:'flex',justifyContent:\"center\"}}> <img className=\"login__logo\" src=\"https://cdn.dribbble.com/users/27903/screenshots/6035052/chatty_2x.png\" alt=\"tinder-logo\"/></div>\r\n              <div className={classNames(\"card\")} style={{ width: '20rem',marginLeft:'auto',marginRight:'auto' }}>\r\n              \r\n                  <div className=\"card-body\">\r\n                      <h5 className=\"card-title\" style={{color:'#f50057'}}>Login/Register</h5>\r\n                      <hr/>\r\n                      <form name=\"myForm\" method=\"post\" onSubmit={submitHandler}>\r\n                       \r\n                              \r\n                                  <TextField id=\"standard-secondary\"   helperText={errMsg} inputProps={{style:{color:'#f50057',paddingLeft:'5px'}}}   label=\"Email\" name=\"txtEmail\" value={email} onChange={changeHandler} className=\"loginnreg__input\" />\r\n                  \r\n                          <Button style={{marginTop:'20px'}} variant=\"contained\" color=\"secondary\"  disabled={isLoginStart} classes={{disabled:'clr'}}   type=\"submit\">\r\n                           Login/Register \r\n                              </Button>\r\n    \r\n                      </form>\r\n                  </div>\r\n              </div></>\r\n                  \r\n            )}\r\n               \r\n\r\n            </>\r\n\r\n\r\n            ) : (\r\n                    \r\n                      \r\n                <App/>\r\n\r\n                 \r\n                    \r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginNReg\r\n","import React,{useEffect,useState} from 'react';\nimport './Home.css';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\n\nfunction Home() {\n   \n    const[isloaded,setload]=useState(false);\n    const [userList,setUserList]=useState([]);\n    \n    useEffect( ()=>{\n\n\n        axios.get(`https://chatee.somee.com/api/Chat/GetData?userid=${localStorage.getItem(\"UserId\")}`,{\n            headers:{\n\n                'Accept':'application/json'\n            }\n        }).then( (response)=>{\n\n            \n\n           setUserList(response.data);\n            setload(true);\n\n      \n      \n  \n              \n          \n        }).catch(err=>console.log(err));\n\n      \n    } \n    ,[]);\n    \n    if(isloaded)\n    {\n        if(userList.length>0)\n        {\n            return(\n\n                <div  className={classNames('home','conatiner','overflow-auto')}>\n            <div style={{marginTop:'65px',justifyContent:'center'}} className=\"row\">\n        \n             {\n                 userList.map(u=>{\n                     \n                            return(\n                                \n                                <div key={u.UserId} className=\"card\" style={{ width: '18rem',margin:'5px'}}>\n                                    {u.Photo?<img id=\"dp\" src={`https://chatee.somee.com/Image/${u.Photo}`} className=\"card-img-top\" alt=\"img__eroor\" /> :<img id=\"dp\" src={\"https://previews.123rf.com/images/tanyastock/tanyastock1803/tanyastock180300242/97334667-user-icon-human-person-symbol-avatar-login-sign-circle-button-with-soft-color-gradient-background-ve.jpg\"} className=\"card-img-top\" alt=\"img__eroor\" /> }\n                                \n                  \n                                  <div className=\"card-body\">\n                            <h5 className=\"card-title\">{u.UserId}</h5>\n                  \n                                    <Link to={`/Chat/${u.UserId}/`} >\n                                    <button  className={classNames('btn','btn-block')} style={{backgroundColor:'#f50057',color:'whitesmoke',fontWeight:'600'}}>Chat</button>\n                                    </Link>\n                               \n                              </div>\n                          </div>\n                            )\n                       \n                     \n                       \n                 })\n             }\n          </div>\n       \n        </div>\n            )\n        }\n        else\n        {\n            return <h3 style={{color:\"lightgrey\",textAlign:'center',margin:'auto',marginTop:'200px'}}>No more user for chat...</h3>\n        }\n    }\n    else\n    {\n        return  <h3 style={{color:\"lightgrey\",textAlign:'center',margin:'auto',marginTop:'200px'}}>Loading...</h3>\n    }\n    \n    \n\n}\n\nexport default Home\n","import React, { Component } from 'react'\n\nexport class ErrorBoundry extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             hasError:false\n        }\n    }\n\n     static   getDerivedStateFromError()\n        {\n            return{\n                hasError:true\n            }\n            \n        }\n    \n\n    render() {\n        if(this.state.hasError)\n        {\n            return <div style={{fontWeight:'bold'}}>Something went wrong</div>\n        }\n    return this.props.children;\n    }\n}\n\nexport default ErrorBoundry\n","import React, { useState, useEffect} from 'react';\r\nimport {useHistory,Redirect,Route,Switch, HashRouter} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Chats from './Chats';\r\nimport Profile from './Profile';\r\nimport ChatScreen from './ChatScreen';\r\nimport './App.css';\r\nimport LoginNReg from './LoginNReg';\r\nimport axios from 'axios';\r\nimport Home from './Home';\r\nimport ErrorBoundry from './ErrorBoundry';\r\n\r\n function App() {\r\n\r\n \r\n useEffect(()=>{\r\n  \r\n\r\n  //   axios.get(\"https://chatee.somee.com/api/Chat/CheckUserid\",{headers:{\r\n\r\n  //     \"Accept\":'application/json'\r\n  //   }}).then(response=>\r\n  //     {\r\n\r\n        \r\n  //     if(response.data.some(m=>m.UserId===localStorage.getItem(\"UserId\")))\r\n  //     {\r\n  //       setload(true);\r\n  //       setcheck(true);\r\n       \r\n  //     }else\r\n  //     {\r\n  //       localStorage.removeItem(\"UserId\");\r\n  //     localStorage.removeItem(\"Photo\")\r\n  //       setload(true);\r\n  //       setcheck(false);\r\n  //     }\r\n   \r\n \r\n      \r\n  //     }).catch(err=>console.log(err));\r\n  \r\n  }\r\n\r\n  ,[]);\r\n  \r\n  if(localStorage.getItem(\"UserId\")===null){\r\n    return <LoginNReg/>\r\n      \r\n  }\r\n  else\r\n  {\r\n    \r\n    return(\r\n      \r\n      <HashRouter>\r\n   \r\n      <Switch>\r\n        \r\n      {/* Home Screen */}\r\n      <Route exact strict path=\"/\">\r\n        <ErrorBoundry>\r\n        <Header/>\r\n        <Home/>\r\n        </ErrorBoundry>\r\n      </Route>\r\n        {/*Chat List */}\r\n      \r\n     \r\n        <Route exact strict path=\"/Chats/\">\r\n          <ErrorBoundry>\r\n          <Header  backButton=\"/\" />\r\n          <Chats />\r\n          </ErrorBoundry>\r\n        </Route>\r\n         {/* Profile */}\r\n        <Route  exact strict path=\"/Profile/\">\r\n        <ErrorBoundry>\r\n        <Header  backButton=\"/\" />\r\n            <Profile/>\r\n            </ErrorBoundry>\r\n            </Route>\r\n\r\n        {/* ChatScreen */}\r\n\r\n        <Route  path=\"/Chat/:UserId/\" strict render={\r\n          ({match})=>(\r\n            <ErrorBoundry>\r\n            <Header backButton=\"/Chats/\"/>\r\n             <ChatScreen targetUserId={match.params.UserId} />\r\n            </ErrorBoundry>\r\n          )\r\n\r\n        }/>\r\n        {/* <Route path=\"/Home/\" strict exact component={App}/>\r\n          \r\n    \r\n      <Route exact strict path=\"/Login/\" component={LoginNReg} /> */}\r\n          {/* <Header backButton=\"/Chats\" />\r\n    \r\n          <ChatScreen />\r\n        </Route> */}\r\n      {/* this below route redircect the home component wherever it gets the unknown routes */}\r\n     \r\n     \r\n       {/* <Redirect  to=\"/\" /> */}\r\n       \r\n\r\n      </Switch>\r\n    </HashRouter>\r\n    )\r\n  }\r\n  \r\n \r\n    \r\n \r\n    }\r\n   \r\n\r\n \r\n\r\n\r\n    \r\n\r\n\r\n\r\n  export default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React,{useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n<App/>\r\n\r\n\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}